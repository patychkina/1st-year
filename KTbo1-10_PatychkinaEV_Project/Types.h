#pragma once

/*! \defgroup Types Новые типы данных
*/
///@{

/**
* \brief Определение нового типа для хранения данных из файла Catalog.txt
*/
typedef struct {
	char short_name[21];///<Краткое наименование программы
	int full_hours;///<Общее количество часов по программе
	int audit_hours;///<Количеcтво часов аудиторных занятий
	char full_name[272];///<Полное наименование программы
}all_program;

/**
* \brief Определение нового типа для хранения данных из файла Reestr.txt
*/
typedef struct {
	char short_name[21];///<Краткое наименование программы
	int m_start;///<Месяц начала реализации программы
	int y_start;///<Год начала реализации программы
	int m_end;///<Месяц окончания реализации программы
	int y_end;///<Год окончания реализации программы
	int price;///<Стоимость обучения на программе в рублях
	int count_pupils;///<Количество обущающихся на программе
	int count_groups;///<Количество групп на программе
}real_program;

/**
* \brief Определение нового типа для хранения данных из файла input.txt
*/
typedef struct {
	char sum[4];///<Ключевое слово Sum, означающее запрос на суммирование
	char F_I_O[21];///<Фамилия и инициалы преподавателя. для которого необходимо выполнить расчёт/для выполнения расчёта по всем преподавателям данного месяца при наличии символа "*"
	int m;///<Месяц расчётного периода
	int y;///<Год расчётного периода
}input;

/**
* \brief Определение нового типа для хранения данных из файла tab_MM_YYYY.txt
*/
typedef struct {
	char F_I_O[21];///<Фамилия и инициалы преподавателя
	char short_name[21];///<Краткое наименование программы
	int hours;///<Количество аудиторных часов, отработанных на программе за месяц
}tab;

/**
* \brief Определение нового типа для хранения важных данных необходимых при расчёте
*/
typedef struct {
	char short_name[21];///<Краткое наименование программы
	int hours;///<Количество аудиторных часов, отработанных на программе за месяц
	int T;///<Стоимость обучения на программе в рублях
	int N;///<Количество обущающихся на программе
	int Ngr;///<Количество групп на программе
	int all_hours;///<Общее количество часов по программе в указанный период
	int Saud;///<Количеcтво часов аудиторных занятий
	float P;///<Стоимость часа аудиторных занятий по определённой программе
	int Vfot;///<Коэффициент для расчёта фонда оплаты труда преподавателей
}tab_2;

/**
* \brief Определение нового типа для хранения важных данных необходимых при расчёте для определённого преподавателя
*/
typedef struct {
	char F_I_O[21];///<Фамилия и инициалы преподавателя
	tab_2 *tab;///<Список данных п образовательным программам
	int error;///<Флаг - ошибка
	int count_program;///<Количество образовательных программ
}all_teach;

///@}