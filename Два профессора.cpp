/*Ввод и вывод данных производятся через стандартные потоки ввода-вывода.
Профессор Флойд и профессор Дейкстра ненавидят друг друга. После переезда университета во вновь отстроенный университетский городок они потребовали
 себе кабинеты в зданиях, максимально удалённых друг от друга. Вам поручено найти расстояние между двумя такими зданиями.

Иными словами, требуется найти два здания, кратчайший путь между которыми наибольший среди всех пар зданий, и вывести длину этого пути. 
Так как профессорам иногда все же нужно встречаться, путь между выбранными зданиями должен существовать.

Входные данные
В первой строке находятся два числа N
 и M
 - количество зданий и количество дорог, соединяющих здания (1≤N≤100,0≤M≤N⋅(N−1)2
). Далее в M
 строках расположены описания дорог: 3 целых числа si
, ei
, li
 - здания, в которых начинается и заканчивается дорога и длина дороги соответственно (1≤si,ei≤N,0≤li≤100
, дороги двунаправленные).

Выходные данные
Необходимо вывести одно число - искомое расстояние.*/
#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

int main()
{
	int N, M;
	int max_len = -1;
	const int INF = 1000000;
	cin >> N >> M;
	vector <vector<int>> roads(N + 1, vector<int>(N + 1, INF));
	for (int i = 0; i < M; i++)
	{
		int t1, t2, t3;
		cin >> t1 >> t2 >> t3;
		roads[t1][t2] = t3;
		roads[t2][t1] = t3;
	}
	if (M > 0)
	{
		for (int k = 1; k <= N; k++)
		{
			for (int i = 1; i <= N; i++)
			{
				for (int j = 1; j <= N; j++)
				{
					roads[i][j] = min(roads[i][j], roads[i][k] + roads[k][j]);
				}
			}
		}
		for (int i = 1; i <= N; i++)
		{
			for (int j = 1; j <= N; j++)
			{
				if ((i != j) && (roads[i][j] != INF))
					max_len = max(max_len, roads[i][j]);
			}
		}
	}
	else
		max_len = 0;
	cout << max_len << endl;
}